<?php

namespace common\models;

use Yii;
use yii\helpers\Html;
use common\components\func;
use yii\web\UploadedFile;
/**
 * This is the model class for table "{{%slide}}".
 *
 * @property integer $id
 * @property string $tieu_de
 * @property string $duong_dan
 * @property string $active
 * @property string $noi_dung
 *
 * @property SlideImage[] $slideImages
 */
class slide extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%slide}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['active', 'noi_dung'], 'string'],
            [['tieu_de', 'duong_dan'], 'string', 'max' => 255]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'tieu_de' => Yii::t('app', 'Tiêu Đề'),
            'duong_dan' => Yii::t('app', 'Đường Dẫn'),
            'active' => Yii::t('app', 'Active'),
            'noi_dung' => Yii::t('app', 'Nội Dung'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSlideImages()
    {
        return $this->hasMany(SlideImage::className(), ['slide_id' => 'id']);
    }

    /**
     * @inheritdoc
     * @return SlideQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new SlideQuery(get_called_class());
    }
    public  function  afterSave($insert,$changedAttributes){
        /*        $hinhanh = new hinhanh();
                $hinhanh->file = UploadedFile::getInstances($hinhanh,'file');
                foreach ($hinhanh->file as $key=>$val)
                {
                    $hinhanh1 = new hinhanh();
                    $val->saveAs('uploads/'.$this->duongdan.'-'.($key+1).'.'.$val->extension);
                    $hinhanh1->path = 'uploads/'.$this->duongdan.'-'.($key+1).'.'.$val->extension;
                    $hinhanh1->hanghoa_id = $this->id;
                    $hinhanh1->save(false);
                }
                return parent::afterSave($insert,$changedAttributes);*/

        $hinhanh = new slideimage();
        $paths = $hinhanh->findAll(['slide_id'=>$this->id]);
        $files = UploadedFile::getInstances($hinhanh,'path');
//        var_dump($files);
//        exit;
        if($files != NULL) {
            if(isset($paths)){
                foreach ($paths as $path)
                {
                    unlink($path['path']);
                }
                $hinhanh->deleteAll(['slide_id'=>$this->id]);
            }
            foreach ($files as $key => $file) {
                $hinhanh1 = new slideimage();
                $file->saveAs('uploads/' . $this->duong_dan . '.' . ($key + 1) . '.' . $file->extension);
                $hinhanh1->path = 'uploads/' . $this->duong_dan . '.' . ($key + 1) . '.' . $file->extension;
                $hinhanh1->slide_id = $this->id;
                $hinhanh1->save(false);
            }
        }
        else{

        }
        return parent::afterSave($insert,$changedAttributes);
    }
    public function beforeSave($insert)
    {
        $func = new func();
        $this->duong_dan = $func->taoduongdan($this->tieu_de);
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function beforeDelete()
    {
        $hinhanh = new slideimage();
        $paths = $hinhanh->findAll(['slide_id'=>$this->id]);
        foreach ($paths as $path)
        {
            unlink($path['path']);
        }
        $hinhanh->deleteAll(['slide_id'=>$this->id]);
        return parent::beforeDelete();
    }
    public function hinhanh()
    {
        $pathv = '';
        $hinhanh = new slideimage();
        $paths = $hinhanh->findAll(['slide_id'=>$this->id]);
        foreach($paths as $path){
//            $pathv[] = $path->path;
            if (file_exists($path['path']))
                $pathv .= Html::img(Yii::$app->request->BaseUrl.'/'.$path['path'], ['width'=>'50','height'=>'50','style'=>'margin:0 5px;']);
        }
        return $pathv;
    }
}
